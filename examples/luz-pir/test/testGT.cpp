// /** Generated by YAKINDU Statechart Tools code generator. */
// // #include <string>

// #include "../statechart/Statechart.h"
// // #include "../lib/googletest/googletest/include/gtest/gtest.h"
// // #include <../lib/googletest/googletest/include/gtest>

// // #define SC_UNUSED(P) (void)P
// // #include "../googletest/googletest/include/gtest/gtest.h"
// #include <AUnit.h>

// //#include "gtest/gtest.h"
// namespace
// {

//   Statechart *statechart;

//   //! The timers are managed by a timer service. */
//   // static SctUnitRunner *runner;

//   class StatechartTest : public ::testing::Test
//   {
//   protected:
//     virtual void SetUp()
//     {
//       statechart = new Statechart();
//       // runner = new SctUnitRunner(
//       //     statechart,
//       //     true,
//       //     200);
//     }
//     virtual void TearDown()
//     {
//       delete statechart;
//       // delete runner;
//     }
//   };

//   TEST_F(StatechartTest, testLuzInitOFF)
//   {

//     statechart->enter();

//     EXPECT_TRUE(statechart->luz()->isRaisedOFF());
//   }
//   TEST_F(StatechartTest, testSinalPIR_SinalLuz)
//   {

//     statechart->enter();

//     statechart->pir()->raiseON();

//     EXPECT_TRUE(statechart->luz()->isRaisedON());

//     statechart->pir()->raiseOFF();

//     EXPECT_TRUE(statechart->luz()->isRaisedOFF());
//   }
//   TEST_F(StatechartTest, test5Ativacoes)
//   {

//     statechart->enter();

//     // sc_integer i = 0;
//     int i = 0;

//     statechart->pir()->raiseON();

//     i = i + 1;

//     while ((i) < (5))
//     {
//       i = i + 1;
//       statechart->pir()->raiseOFF();
//       statechart->pir()->raiseON();
//     }

//     statechart->pir()->raiseON();

//     EXPECT_TRUE((statechart->getCount()) == (5));

//     // EXPECT_TRUE(statechart->isStateActive(Statechart::main_region_Estado5Ativacoes));

//     // statechart->pir()->raiseON();

//     // EXPECT_TRUE(statechart->isStateActive(Statechart::main_region__final_));
//   }

// }
